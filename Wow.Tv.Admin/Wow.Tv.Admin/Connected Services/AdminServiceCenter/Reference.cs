//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wow.Tv.Admin.AdminServiceCenter {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceCenter.IServiceCenter")]
    public interface IServiceCenter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NolticeSearchList", ReplyAction="http://tempuri.org/IServiceCenter/NolticeSearchListResponse")]
        Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE> NolticeSearchList(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.NoticeCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NolticeSearchList", ReplyAction="http://tempuri.org/IServiceCenter/NolticeSearchListResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE>> NolticeSearchListAsync(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.NoticeCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/GetNoticeSingle", ReplyAction="http://tempuri.org/IServiceCenter/GetNoticeSingleResponse")]
        Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE GetNoticeSingle(int seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/GetNoticeSingle", ReplyAction="http://tempuri.org/IServiceCenter/GetNoticeSingleResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE> GetNoticeSingleAsync(int seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NoticeSave", ReplyAction="http://tempuri.org/IServiceCenter/NoticeSaveResponse")]
        void NoticeSave(Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE model, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NoticeSave", ReplyAction="http://tempuri.org/IServiceCenter/NoticeSaveResponse")]
        System.Threading.Tasks.Task NoticeSaveAsync(Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE model, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NoticeDelete", ReplyAction="http://tempuri.org/IServiceCenter/NoticeDeleteResponse")]
        void NoticeDelete(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/NoticeDelete", ReplyAction="http://tempuri.org/IServiceCenter/NoticeDeleteResponse")]
        System.Threading.Tasks.Task NoticeDeleteAsync(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQSearchList", ReplyAction="http://tempuri.org/IServiceCenter/FAQSearchListResponse")]
        Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ> FAQSearchList(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.FAQCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQSearchList", ReplyAction="http://tempuri.org/IServiceCenter/FAQSearchListResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ>> FAQSearchListAsync(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.FAQCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/GetFAQSingle", ReplyAction="http://tempuri.org/IServiceCenter/GetFAQSingleResponse")]
        Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ GetFAQSingle(int seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/GetFAQSingle", ReplyAction="http://tempuri.org/IServiceCenter/GetFAQSingleResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ> GetFAQSingleAsync(int seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQSave", ReplyAction="http://tempuri.org/IServiceCenter/FAQSaveResponse")]
        void FAQSave(Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ model, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQSave", ReplyAction="http://tempuri.org/IServiceCenter/FAQSaveResponse")]
        System.Threading.Tasks.Task FAQSaveAsync(Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ model, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQDelete", ReplyAction="http://tempuri.org/IServiceCenter/FAQDeleteResponse")]
        void FAQDelete(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCenter/FAQDelete", ReplyAction="http://tempuri.org/IServiceCenter/FAQDeleteResponse")]
        System.Threading.Tasks.Task FAQDeleteAsync(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCenterChannel : Wow.Tv.Admin.AdminServiceCenter.IServiceCenter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCenterClient : System.ServiceModel.ClientBase<Wow.Tv.Admin.AdminServiceCenter.IServiceCenter>, Wow.Tv.Admin.AdminServiceCenter.IServiceCenter {
        
        public ServiceCenterClient() {
        }
        
        public ServiceCenterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCenterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCenterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCenterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE> NolticeSearchList(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.NoticeCondition condition) {
            return base.Channel.NolticeSearchList(condition);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE>> NolticeSearchListAsync(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.NoticeCondition condition) {
            return base.Channel.NolticeSearchListAsync(condition);
        }
        
        public Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE GetNoticeSingle(int seq) {
            return base.Channel.GetNoticeSingle(seq);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE> GetNoticeSingleAsync(int seq) {
            return base.Channel.GetNoticeSingleAsync(seq);
        }
        
        public void NoticeSave(Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE model, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            base.Channel.NoticeSave(model, loginUser);
        }
        
        public System.Threading.Tasks.Task NoticeSaveAsync(Wow.Tv.Middle.Model.Db49.wowtv.TAB_NOTICE model, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            return base.Channel.NoticeSaveAsync(model, loginUser);
        }
        
        public void NoticeDelete(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            base.Channel.NoticeDelete(seq, loginUser);
        }
        
        public System.Threading.Tasks.Task NoticeDeleteAsync(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            return base.Channel.NoticeDeleteAsync(seq, loginUser);
        }
        
        public Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ> FAQSearchList(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.FAQCondition condition) {
            return base.Channel.FAQSearchList(condition);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ>> FAQSearchListAsync(Wow.Tv.Middle.Model.Db49.wowtv.ServiceCenter.FAQCondition condition) {
            return base.Channel.FAQSearchListAsync(condition);
        }
        
        public Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ GetFAQSingle(int seq) {
            return base.Channel.GetFAQSingle(seq);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ> GetFAQSingleAsync(int seq) {
            return base.Channel.GetFAQSingleAsync(seq);
        }
        
        public void FAQSave(Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ model, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            base.Channel.FAQSave(model, loginUser);
        }
        
        public System.Threading.Tasks.Task FAQSaveAsync(Wow.Tv.Middle.Model.Db49.wowtv.TAB_FAQ model, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            return base.Channel.FAQSaveAsync(model, loginUser);
        }
        
        public void FAQDelete(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            base.Channel.FAQDelete(seq, loginUser);
        }
        
        public System.Threading.Tasks.Task FAQDeleteAsync(int seq, Wow.Tv.Middle.Model.Common.LoginUser loginUser) {
            return base.Channel.FAQDeleteAsync(seq, loginUser);
        }
    }
}
