//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wow.Tv.Admin.MemberUtilService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MemberUtilService.IMemberUtilService")]
    public interface IMemberUtilService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/SmsTempPassword", ReplyAction="http://tempuri.org/IMemberUtilService/SmsTempPasswordResponse")]
        void SmsTempPassword(string mobileNo, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/SmsTempPassword", ReplyAction="http://tempuri.org/IMemberUtilService/SmsTempPasswordResponse")]
        System.Threading.Tasks.Task SmsTempPasswordAsync(string mobileNo, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/SmsDormancyAuth", ReplyAction="http://tempuri.org/IMemberUtilService/SmsDormancyAuthResponse")]
        string SmsDormancyAuth(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/SmsDormancyAuth", ReplyAction="http://tempuri.org/IMemberUtilService/SmsDormancyAuthResponse")]
        System.Threading.Tasks.Task<string> SmsDormancyAuthAsync(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailAuth", ReplyAction="http://tempuri.org/IMemberUtilService/EmailAuthResponse")]
        void EmailAuth(int userNumber, string email, System.DateTime expireDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailAuth", ReplyAction="http://tempuri.org/IMemberUtilService/EmailAuthResponse")]
        System.Threading.Tasks.Task EmailAuthAsync(int userNumber, string email, System.DateTime expireDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailRegistGeneral", ReplyAction="http://tempuri.org/IMemberUtilService/EmailRegistGeneralResponse")]
        void EmailRegistGeneral(string userName, string nickName, string email, int bounsCash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailRegistGeneral", ReplyAction="http://tempuri.org/IMemberUtilService/EmailRegistGeneralResponse")]
        System.Threading.Tasks.Task EmailRegistGeneralAsync(string userName, string nickName, string email, int bounsCash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailRegistCompany", ReplyAction="http://tempuri.org/IMemberUtilService/EmailRegistCompanyResponse")]
        void EmailRegistCompany(string userName, string nickName, string email, int bounsCash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailRegistCompany", ReplyAction="http://tempuri.org/IMemberUtilService/EmailRegistCompanyResponse")]
        System.Threading.Tasks.Task EmailRegistCompanyAsync(string userName, string nickName, string email, int bounsCash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailUserEdit", ReplyAction="http://tempuri.org/IMemberUtilService/EmailUserEditResponse")]
        void EmailUserEdit(string userId, string nickName, string[] changedItemList, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailUserEdit", ReplyAction="http://tempuri.org/IMemberUtilService/EmailUserEditResponse")]
        System.Threading.Tasks.Task EmailUserEditAsync(string userId, string nickName, string[] changedItemList, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailCompanyRegistRejectAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailCompanyRegistRejectAlarmResponse")]
        void EmailCompanyRegistRejectAlarm(string nickName, string email, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailCompanyRegistRejectAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailCompanyRegistRejectAlarmResponse")]
        System.Threading.Tasks.Task EmailCompanyRegistRejectAlarmAsync(string nickName, string email, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailFindIdAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailFindIdAlarmResponse")]
        void EmailFindIdAlarm(string nickName, string email, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailFindIdAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailFindIdAlarmResponse")]
        System.Threading.Tasks.Task EmailFindIdAlarmAsync(string nickName, string email, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailFindPasswordAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailFindPasswordAlarmResponse")]
        void EmailFindPasswordAlarm(string nickName, string email, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailFindPasswordAlarm", ReplyAction="http://tempuri.org/IMemberUtilService/EmailFindPasswordAlarmResponse")]
        System.Threading.Tasks.Task EmailFindPasswordAlarmAsync(string nickName, string email, string tempPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailUserSecession", ReplyAction="http://tempuri.org/IMemberUtilService/EmailUserSecessionResponse")]
        void EmailUserSecession(string nickName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailUserSecession", ReplyAction="http://tempuri.org/IMemberUtilService/EmailUserSecessionResponse")]
        System.Threading.Tasks.Task EmailUserSecessionAsync(string nickName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailTemplateTest", ReplyAction="http://tempuri.org/IMemberUtilService/EmailTemplateTestResponse")]
        void EmailTemplateTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberUtilService/EmailTemplateTest", ReplyAction="http://tempuri.org/IMemberUtilService/EmailTemplateTestResponse")]
        System.Threading.Tasks.Task EmailTemplateTestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMemberUtilServiceChannel : Wow.Tv.Admin.MemberUtilService.IMemberUtilService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberUtilServiceClient : System.ServiceModel.ClientBase<Wow.Tv.Admin.MemberUtilService.IMemberUtilService>, Wow.Tv.Admin.MemberUtilService.IMemberUtilService {
        
        public MemberUtilServiceClient() {
        }
        
        public MemberUtilServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MemberUtilServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberUtilServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberUtilServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SmsTempPassword(string mobileNo, string tempPassword) {
            base.Channel.SmsTempPassword(mobileNo, tempPassword);
        }
        
        public System.Threading.Tasks.Task SmsTempPasswordAsync(string mobileNo, string tempPassword) {
            return base.Channel.SmsTempPasswordAsync(mobileNo, tempPassword);
        }
        
        public string SmsDormancyAuth(string mobileNo) {
            return base.Channel.SmsDormancyAuth(mobileNo);
        }
        
        public System.Threading.Tasks.Task<string> SmsDormancyAuthAsync(string mobileNo) {
            return base.Channel.SmsDormancyAuthAsync(mobileNo);
        }
        
        public void EmailAuth(int userNumber, string email, System.DateTime expireDate) {
            base.Channel.EmailAuth(userNumber, email, expireDate);
        }
        
        public System.Threading.Tasks.Task EmailAuthAsync(int userNumber, string email, System.DateTime expireDate) {
            return base.Channel.EmailAuthAsync(userNumber, email, expireDate);
        }
        
        public void EmailRegistGeneral(string userName, string nickName, string email, int bounsCash) {
            base.Channel.EmailRegistGeneral(userName, nickName, email, bounsCash);
        }
        
        public System.Threading.Tasks.Task EmailRegistGeneralAsync(string userName, string nickName, string email, int bounsCash) {
            return base.Channel.EmailRegistGeneralAsync(userName, nickName, email, bounsCash);
        }
        
        public void EmailRegistCompany(string userName, string nickName, string email, int bounsCash) {
            base.Channel.EmailRegistCompany(userName, nickName, email, bounsCash);
        }
        
        public System.Threading.Tasks.Task EmailRegistCompanyAsync(string userName, string nickName, string email, int bounsCash) {
            return base.Channel.EmailRegistCompanyAsync(userName, nickName, email, bounsCash);
        }
        
        public void EmailUserEdit(string userId, string nickName, string[] changedItemList, string email) {
            base.Channel.EmailUserEdit(userId, nickName, changedItemList, email);
        }
        
        public System.Threading.Tasks.Task EmailUserEditAsync(string userId, string nickName, string[] changedItemList, string email) {
            return base.Channel.EmailUserEditAsync(userId, nickName, changedItemList, email);
        }
        
        public void EmailCompanyRegistRejectAlarm(string nickName, string email, string userId) {
            base.Channel.EmailCompanyRegistRejectAlarm(nickName, email, userId);
        }
        
        public System.Threading.Tasks.Task EmailCompanyRegistRejectAlarmAsync(string nickName, string email, string userId) {
            return base.Channel.EmailCompanyRegistRejectAlarmAsync(nickName, email, userId);
        }
        
        public void EmailFindIdAlarm(string nickName, string email, string userId) {
            base.Channel.EmailFindIdAlarm(nickName, email, userId);
        }
        
        public System.Threading.Tasks.Task EmailFindIdAlarmAsync(string nickName, string email, string userId) {
            return base.Channel.EmailFindIdAlarmAsync(nickName, email, userId);
        }
        
        public void EmailFindPasswordAlarm(string nickName, string email, string tempPassword) {
            base.Channel.EmailFindPasswordAlarm(nickName, email, tempPassword);
        }
        
        public System.Threading.Tasks.Task EmailFindPasswordAlarmAsync(string nickName, string email, string tempPassword) {
            return base.Channel.EmailFindPasswordAlarmAsync(nickName, email, tempPassword);
        }
        
        public void EmailUserSecession(string nickName, string email) {
            base.Channel.EmailUserSecession(nickName, email);
        }
        
        public System.Threading.Tasks.Task EmailUserSecessionAsync(string nickName, string email) {
            return base.Channel.EmailUserSecessionAsync(nickName, email);
        }
        
        public void EmailTemplateTest() {
            base.Channel.EmailTemplateTest();
        }
        
        public System.Threading.Tasks.Task EmailTemplateTestAsync() {
            return base.Channel.EmailTemplateTestAsync();
        }
    }
}
