//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wow.Tv.Admin.AccessLogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccessLogService.IAccessLogService")]
    public interface IAccessLogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/Regist", ReplyAction="http://tempuri.org/IAccessLogService/RegistResponse")]
        void Regist(string ipAddress, int menuSeq, string accessCode, string userId, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccessLogService/Regist", ReplyAction="http://tempuri.org/IAccessLogService/RegistResponse")]
        System.Threading.Tasks.Task RegistAsync(string ipAddress, int menuSeq, string accessCode, string userId, string url);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccessLogServiceChannel : Wow.Tv.Admin.AccessLogService.IAccessLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccessLogServiceClient : System.ServiceModel.ClientBase<Wow.Tv.Admin.AccessLogService.IAccessLogService>, Wow.Tv.Admin.AccessLogService.IAccessLogService {
        
        public AccessLogServiceClient() {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccessLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Regist(string ipAddress, int menuSeq, string accessCode, string userId, string url) {
            base.Channel.Regist(ipAddress, menuSeq, accessCode, userId, url);
        }
        
        public System.Threading.Tasks.Task RegistAsync(string ipAddress, int menuSeq, string accessCode, string userId, string url) {
            return base.Channel.RegistAsync(ipAddress, menuSeq, accessCode, userId, url);
        }
    }
}
